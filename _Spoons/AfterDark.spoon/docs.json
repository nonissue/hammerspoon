[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [
      {
        "doc" : "Flag for darkmode status, 'false' means darkmode off, 'true' means on.",
        "stripped_doc" : [
          "Flag for darkmode status, 'false' means darkmode off, 'true' means on."
        ],
        "name" : "darkModeIsOn",
        "desc" : "Flag for darkmode status, 'false' means darkmode off, 'true' means on.",
        "notes" : [

        ],
        "signature" : "AfterDark.darkModeIsOn",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "AfterDark.darkModeIsOn",
        "parameters" : [

        ]
      },
      {
        "doc" : "Set to greater than 1 so there is a slight delay before overlay starts fading out\nProbably not the best way to do this though",
        "stripped_doc" : [
          "Set to greater than 1 so there is a slight delay before overlay starts fading out",
          "Probably not the best way to do this though"
        ],
        "name" : "overlayTransparency",
        "desc" : "Set to greater than 1 so there is a slight delay before overlay starts fading out",
        "notes" : [

        ],
        "signature" : "AfterDark.overlayTransparency",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "AfterDark.overlayTransparency",
        "parameters" : [

        ]
      }
    ],
    "stripped_doc" : [

    ],
    "type" : "Module",
    "Deprecated" : [

    ],
    "desc" : "Darkmode menubar toggle",
    "Constructor" : [

    ],
    "doc" : "Darkmode menubar toggle",
    "Method" : [
      {
        "doc" : "creates overlay that will be used during transition\nThis function checks the screen resolution in case it has\nchanged, and generates new rect if it has\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "creates overlay that will be used during transition",
          "This function checks the screen resolution in case it has",
          "changed, and generates new rect if it has",
          ""
        ],
        "name" : "createOverlay",
        "desc" : "creates overlay that will be used during transition",
        "notes" : [

        ],
        "signature" : "AfterDark:createOverlay()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "def" : "AfterDark:createOverlay()",
        "parameters" : [
          " * None",
          ""
        ]
      },
      {
        "doc" : "Toggles dark mode while fading a rect that covers the whole screen\nfrom black to completely transparent\nThis is done because there is sometimes a display with darkMode switch\nin apps like safari\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "Toggles dark mode while fading a rect that covers the whole screen",
          "from black to completely transparent",
          "This is done because there is sometimes a display with darkMode switch",
          "in apps like safari",
          ""
        ],
        "name" : "toggleDarkMode",
        "desc" : "Toggles dark mode while fading a rect that covers the whole screen",
        "notes" : [

        ],
        "signature" : "AfterDark:toggleDarkMode()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "def" : "AfterDark:toggleDarkMode()",
        "parameters" : [
          " * None",
          ""
        ]
      },
      {
        "doc" : "Initialize our AfterDark spoon\n- Deletes any existing menubars\n- Deletes any leftover overlays\n- Creates a new rect with current screenSize\n- Sets rect properties\n- Creates menubar item, adds it to menubar\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "Initialize our AfterDark spoon",
          "- Deletes any existing menubars",
          "- Deletes any leftover overlays",
          "- Creates a new rect with current screenSize",
          "- Sets rect properties",
          "- Creates menubar item, adds it to menubar",
          ""
        ],
        "name" : "init",
        "desc" : "Initialize our AfterDark spoon",
        "notes" : [

        ],
        "signature" : "AfterDark:init()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "def" : "AfterDark:init()",
        "parameters" : [
          " * None",
          ""
        ]
      },
      {
        "doc" : "Start\n\nParameters:\n * options - An optional table containing spoon configuration options\n\nReturns:\n * None",
        "stripped_doc" : [
          "Start",
          ""
        ],
        "name" : "start",
        "desc" : "Start",
        "notes" : [

        ],
        "signature" : "AfterDark:start()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "def" : "AfterDark:start()",
        "parameters" : [
          " * options - An optional table containing spoon configuration options",
          ""
        ]
      },
      {
        "doc" : "Turn the overlay off, delete any timers\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "Turn the overlay off, delete any timers",
          ""
        ],
        "name" : "stop",
        "desc" : "Turn the overlay off, delete any timers",
        "notes" : [

        ],
        "signature" : "AfterDark:stop()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "def" : "AfterDark:stop()",
        "parameters" : [
          " * None",
          ""
        ]
      },
      {
        "doc" : "Stops the spoon and removes it from menubar\nCleans up any variables\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "Stops the spoon and removes it from menubar",
          "Cleans up any variables",
          ""
        ],
        "name" : "disable",
        "desc" : "Stops the spoon and removes it from menubar",
        "notes" : [

        ],
        "signature" : "AfterDark.disable()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "def" : "AfterDark.disable()",
        "parameters" : [
          " * None",
          ""
        ]
      }
    ],
    "Command" : [

    ],
    "Field" : [

    ],
    "items" : [
      {
        "doc" : "Flag for darkmode status, 'false' means darkmode off, 'true' means on.",
        "stripped_doc" : [
          "Flag for darkmode status, 'false' means darkmode off, 'true' means on."
        ],
        "name" : "darkModeIsOn",
        "desc" : "Flag for darkmode status, 'false' means darkmode off, 'true' means on.",
        "notes" : [

        ],
        "signature" : "AfterDark.darkModeIsOn",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "AfterDark.darkModeIsOn",
        "parameters" : [

        ]
      },
      {
        "doc" : "Set to greater than 1 so there is a slight delay before overlay starts fading out\nProbably not the best way to do this though",
        "stripped_doc" : [
          "Set to greater than 1 so there is a slight delay before overlay starts fading out",
          "Probably not the best way to do this though"
        ],
        "name" : "overlayTransparency",
        "desc" : "Set to greater than 1 so there is a slight delay before overlay starts fading out",
        "notes" : [

        ],
        "signature" : "AfterDark.overlayTransparency",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "AfterDark.overlayTransparency",
        "parameters" : [

        ]
      },
      {
        "doc" : "creates overlay that will be used during transition\nThis function checks the screen resolution in case it has\nchanged, and generates new rect if it has\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "creates overlay that will be used during transition",
          "This function checks the screen resolution in case it has",
          "changed, and generates new rect if it has",
          ""
        ],
        "name" : "createOverlay",
        "desc" : "creates overlay that will be used during transition",
        "notes" : [

        ],
        "signature" : "AfterDark:createOverlay()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "def" : "AfterDark:createOverlay()",
        "parameters" : [
          " * None",
          ""
        ]
      },
      {
        "doc" : "Stops the spoon and removes it from menubar\nCleans up any variables\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "Stops the spoon and removes it from menubar",
          "Cleans up any variables",
          ""
        ],
        "name" : "disable",
        "desc" : "Stops the spoon and removes it from menubar",
        "notes" : [

        ],
        "signature" : "AfterDark.disable()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "def" : "AfterDark.disable()",
        "parameters" : [
          " * None",
          ""
        ]
      },
      {
        "doc" : "Initialize our AfterDark spoon\n- Deletes any existing menubars\n- Deletes any leftover overlays\n- Creates a new rect with current screenSize\n- Sets rect properties\n- Creates menubar item, adds it to menubar\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "Initialize our AfterDark spoon",
          "- Deletes any existing menubars",
          "- Deletes any leftover overlays",
          "- Creates a new rect with current screenSize",
          "- Sets rect properties",
          "- Creates menubar item, adds it to menubar",
          ""
        ],
        "name" : "init",
        "desc" : "Initialize our AfterDark spoon",
        "notes" : [

        ],
        "signature" : "AfterDark:init()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "def" : "AfterDark:init()",
        "parameters" : [
          " * None",
          ""
        ]
      },
      {
        "doc" : "Start\n\nParameters:\n * options - An optional table containing spoon configuration options\n\nReturns:\n * None",
        "stripped_doc" : [
          "Start",
          ""
        ],
        "name" : "start",
        "desc" : "Start",
        "notes" : [

        ],
        "signature" : "AfterDark:start()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "def" : "AfterDark:start()",
        "parameters" : [
          " * options - An optional table containing spoon configuration options",
          ""
        ]
      },
      {
        "doc" : "Turn the overlay off, delete any timers\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "Turn the overlay off, delete any timers",
          ""
        ],
        "name" : "stop",
        "desc" : "Turn the overlay off, delete any timers",
        "notes" : [

        ],
        "signature" : "AfterDark:stop()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "def" : "AfterDark:stop()",
        "parameters" : [
          " * None",
          ""
        ]
      },
      {
        "doc" : "Toggles dark mode while fading a rect that covers the whole screen\nfrom black to completely transparent\nThis is done because there is sometimes a display with darkMode switch\nin apps like safari\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "Toggles dark mode while fading a rect that covers the whole screen",
          "from black to completely transparent",
          "This is done because there is sometimes a display with darkMode switch",
          "in apps like safari",
          ""
        ],
        "name" : "toggleDarkMode",
        "desc" : "Toggles dark mode while fading a rect that covers the whole screen",
        "notes" : [

        ],
        "signature" : "AfterDark:toggleDarkMode()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "def" : "AfterDark:toggleDarkMode()",
        "parameters" : [
          " * None",
          ""
        ]
      }
    ],
    "name" : "AfterDark"
  }
]